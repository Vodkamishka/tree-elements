{"version":3,"sources":["components/folder/folder.js","components/node/node.js","components/edit-menu/edit-menu.js","components/attributes-menu/attributes-menu.js","components/menu/menu.js","components/modal/create-attribute/create-attribute.js","components/modal/root-element/root-element.js","components/modal/delete-attribute/delete-attribute.js","components/modal/edit-attribute/edit-attribute.js","components/interface-tree/interface-tree.js","components/attributes/attributes.js","components/interface-json/interface-json.js","app.js","redux/actions.js","redux/reducer.js","redux/store.js","index.js"],"names":["Folder","setClosedFolder","id","folders","folder","filter","element","newFolders","src","open","alt","className","onClick","Node","parent","data","setSelectedElement","selectedElement","items","el","useState","map","useEffect","console","log","key","e","stopPropagation","x","nativeEvent","y","tempId","showMenu","showEditMenu","showAttributes","attributes","elem","index","Object","keys","value","values","EditMenu","cutNode","cut","pasteNode","copy","copyNode","AttributesMenu","setModals","modals","createAttr","deleteAttr","editAttr","Menu","props","addNode","deleteNode","style","top","left","length","onMouseEnter","CreateAttribute","createAttribute","name","setValue","setParam","field","target","tabIndex","type","data-dismiss","aria-label","aria-hidden","aria-describedby","onChange","RootElement","createRootElem","rooElement","DeleteAttribute","deleteAttribute","select","setSelect","marginLeft","width","defaultValue","EditAttribute","editAttributes","val","slice","forEach","InterfaceTree","rootElement","Attributes","InterfaceJson","i","mapDispatchToProps","parentId","payload","connect","initialState","delEl","newData","childs","reducer","state","action","node","transformData","datas","attr","dataElem","editEl","idx","findIndex","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"8cAwBeA,EAtBA,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QAE9BC,EAASD,EAAQE,QAAO,SAAAC,GAAO,OAAIA,EAAQJ,KAAOA,KAAI,GAEpDK,EAAaJ,EAAQE,QAAO,SAAAC,GAAO,OAAIA,EAAQJ,KAAOA,KAC7D,OACK,yBACIM,IAAKJ,GAAUA,EAAOK,KAAO,oBAAsB,oBACnDC,IAAI,SACJC,UAAU,eACVC,QAAS,WACLX,EAAgB,GAAD,mBACZM,GADY,aAAC,eAGTH,GAHQ,IAIXK,MAAOL,EAAOK,cCkDnBI,EA/DF,SAAPA,EAAQ,GAAyD,IAAxDC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,gBAEvCC,EAAQH,EAAKV,QAAO,SAAAc,GAAE,OAAIA,EAAGL,SAAWA,KAFoB,EAI/BM,mBAASF,EAAMG,KAAI,SAAAF,GAAE,MAAK,CAACjB,GAAIiB,EAAGjB,GAAIO,MAAM,OAJb,mBAI3DN,EAJ2D,KAIlDF,EAJkD,KAUlE,OAJAqB,qBAAU,WACNrB,EAAgBiB,EAAMG,KAAI,SAAAF,GAAE,MAAK,CAACjB,GAAIiB,EAAGjB,GAAIO,MAAM,SACpD,CAACM,IAGA,wBAAIJ,UAAU,QACTO,EAAMG,KAAI,SAAAF,GACP,IAAIf,EAASD,EAAQE,QAAO,SAAAC,GAAO,OAAIA,EAAQJ,KAAOiB,EAAGjB,MAAI,GAG7D,OAFAqB,QAAQC,IAAI,UAAUrB,GACtBoB,QAAQC,IAAI,SAAUpB,GAElB,wBACIO,UAAU,WACVc,IAAKN,EAAGjB,IACJ,yBAAKS,UAAU,iBACX,kBAAC,EAAD,CAAQV,gBAAiBA,EAAiBC,GAAIiB,EAAGjB,GAAIC,QAASA,IAC9D,yBACIQ,UAAcM,EAAgBf,KAAOiB,EAAGjB,GACpC,4CAA8C,mBAClDU,QAAS,SAACc,GACNA,EAAEC,kBACF,IAAMC,EAAIF,EAAEG,YAAYD,EAAI,GACtBE,EAAIJ,EAAEG,YAAYC,EAAI,GAC5Bd,EAAmB,2BACZC,GADW,IAEdf,GAAIiB,EAAGjB,GACP0B,IACAE,IACAC,OAAQZ,EAAGjB,GACX8B,UAAU,EACVC,cAAc,EACdC,gBAAgB,OAIvBf,EAAGgB,WAAWd,KAAI,SAACe,EAAMC,GACtB,IAAIZ,EAAMa,OAAOC,KAAKH,GAClBI,EAAQF,OAAOG,OAAOL,GAC1B,OACA,yBAAKX,IAAKY,GAAV,UAAqBZ,EAArB,aAA6Be,SAKxCpC,GAAUA,EAAOK,MAAQ,kBAACI,EAAD,CACtBC,OAAQK,EAAGjB,GACXa,KAAMA,EACNC,mBAAoBA,EACpBC,gBAAiBA,UCpBlCyB,G,YAnCE,SAAC,GAAkE,IAAhEzB,EAA+D,EAA/DA,gBAAiB0B,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChE,OACI,wBAAIpC,UAAU,gBACV,wBACIA,UAAU,eACVC,QAAS,WACLmC,EAAS,MACTJ,EAAQ1B,EAAgBf,MAJhC,OASA,wBACIS,UAAU,eACVC,QAAS,WACL+B,EAAQ,MACRI,EAAS9B,EAAgBf,MAJjC,QASC0C,GAAOE,EACR,wBACInC,UAAU,eACVC,QAAS,WACLiC,EAAU5B,EAAgBf,IAC1ByC,EAAQ,QAJhB,SAQS,QCINK,G,MAlCQ,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAChC,OACI,wBAAIvC,UAAU,sBACV,wBACIA,UAAU,qBACVC,QAAS,kBAAMqC,EAAU,2BAClBC,GADiB,IAEpBC,YAAY,OAJpB,UASA,wBACKxC,UAAU,qBACVC,QAAS,kBAAMqC,EAAU,2BACnBC,GADkB,IAErBE,YAAY,OAJpB,UASA,wBACIzC,UAAU,qBACVC,QAAS,kBAAMqC,EAAU,2BAClBC,GADiB,IAEpBG,UAAU,OAJlB,WCyCGC,EA5DF,SAACC,GAAW,IACbtC,EAAoEsC,EAApEtC,gBAAiBuC,EAAmDD,EAAnDC,QAASzC,EAA0CwC,EAA1CxC,KAAM0C,EAAoCF,EAApCE,WAAazC,EAAuBuC,EAAvBvC,mBAC/C0C,EAAQ,CACVC,IAAK1C,EAAgBa,EAAI,KACzB8B,KAAM3C,EAAgBW,EAAI,MAE9B,OACI,yBAAKjB,UAAU,OAAO+C,MAAOA,GACzB,wBACI/C,UAAU,YAEN,wBACIA,UAAU,WACVC,QAAS,kBAAM4C,EAAQzC,EAAK8C,OAAQ5C,EAAgBf,KACpD4D,aAAc,kBAAM9C,EAAmB,2BAChCC,GAD+B,IAElCgB,cAAc,EACdC,gBAAgB,OANxB,UAWA,wBACIvB,UAAU,WACVmD,aAAc,kBAAM9C,EAAmB,2BAChCC,GAD+B,IAElCgB,cAAc,EACdC,gBAAgB,OALxB,cAUA,wBACIvB,UAAU,WACVC,QAAS,kBAAM6C,EAAWxC,EAAgBf,KAC1C4D,aAAc,kBAAM9C,EAAmB,2BAChCC,GAD+B,IAElCgB,cAAc,EACdC,gBAAgB,OANxB,UAWA,wBACIvB,UAAU,WACVmD,aAAc,kBAAM9C,EAAmB,2BAChCC,GAD+B,IAElCiB,gBAAgB,EAChBD,cAAc,OALtB,SAWPhB,EAAgBgB,cAAgB,kBAAC,EAAasB,GAC9CtC,EAAgBiB,gBAAkB,kBAAC,EAAmBqB,K,OCOpDQ,G,MAhES,SAAC,GAA2D,IAA1Db,EAAyD,EAAzDA,OAAQD,EAAiD,EAAjDA,UAAWe,EAAsC,EAAtCA,gBAAiB/C,EAAqB,EAArBA,gBAAqB,EACpDG,mBAAS,CAChC6C,KAAM,KACNzB,MAAO,OAHoE,mBACxEC,EADwE,KAChEyB,EADgE,KAKzEC,EAAW,SAACC,EAAO1C,GACrBwC,EAAS,2BACNzB,GADK,kBAEP2B,EAAQ1C,EAAE2C,OAAO7B,UAGtB,OACI,yBAAK7B,UAAU,QAAQ2D,SAAS,MAC5B,yBAAK3D,UAAU,gBACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,oBACA,4BAAQ4D,KAAK,SAAS5D,UAAU,QAAQ6D,eAAa,QAAQC,aAAW,QAAQ7D,QAAS,kBAAMqC,EAAU,2BAClGC,GADiG,IAEpGC,YAAY,OAEhB,0BAAMuB,cAAY,QAAlB,UAGJ,yBAAK/D,UAAU,cACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBT,GAAG,kBAAtC,SAER,2BAAOqE,KAAK,OAAO5D,UAAU,eAAgB8D,aAAW,WACxDE,mBAAiB,iBAAiBC,SAAU,SAAClD,GAAD,OAAOyC,EAAS,OAAQzC,OAEpE,yBAAKf,UAAU,2BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBT,GAAG,mBAAtC,UAER,2BAAOqE,KAAK,OAAO5D,UAAU,eAAgB8D,aAAW,WACxDE,mBAAiB,iBAAiBC,SAAU,SAAClD,GAAD,OAAOyC,EAAS,QAASzC,QAGzE,yBAAKf,UAAU,gBACX,4BAAQ4D,KAAK,SAAS5D,UAAU,oBAAoB6D,eAAa,QAAQ5D,QAAS,kBAAMqC,EAAU,2BAC3FC,GAD0F,IAE7FC,YAAY,OAFhB,SAIA,4BAAQoB,KAAK,SAAS5D,UAAU,kBAChCC,QAAS,WAAO,IACL4B,EAAeC,EAAfD,MAAOyB,EAAQxB,EAARwB,KACVzB,GAASyB,IACTD,EAAgBC,EAAMzB,EAAOvB,EAAgBc,QAC7CkB,EAAU,2BACHC,GADE,IAELC,YAAY,QAPxB,gBCrBL0B,EAzBK,SAAC,GAAyC,IAAxC5B,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,OAAQ4B,EAAoB,EAApBA,eACrC,OACI,yBAAKnE,UAAU,QAAQ2D,SAAS,MAC5B,yBAAK3D,UAAU,gBACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,wBAEJ,yBAAKA,UAAU,gBACX,4BAAQ4D,KAAK,SAAS5D,UAAU,kBAChCC,QAAW,WACPkE,IACA7B,EAAU,2BACHC,GADE,IAEL6B,YAAY,OALpB,eCyCLC,EAlDS,SAAC,GAAiE,IAAhE9B,EAA+D,EAA/DA,OAAQD,EAAuD,EAAvDA,UAAWgC,EAA4C,EAA5CA,gBAAiBhE,EAA2B,EAA3BA,gBAAiBF,EAAU,EAAVA,KAAU,EACzDK,mBAAS,MADgD,mBAC9E8D,EAD8E,KACtEC,EADsE,KAGjFhD,EAAapB,EAAKV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOe,EAAgBc,UAAQ,GAAGI,WACxE,OACI,yBAAKxB,UAAU,QAAQ2D,SAAS,MAC5B,yBAAK3D,UAAU,gBACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,oBACA,4BAAQ4D,KAAK,SAAS5D,UAAU,QAAQ6D,eAAa,QAAQC,aAAW,QAAQ7D,QAAS,kBAAMqC,EAAU,2BAClGC,GADiG,IAEpGE,YAAY,OAEhB,0BAAMsB,cAAY,QAAlB,UAGJ,yBAAK/D,UAAU,oBAAoB+C,MAAO,CAAC0B,WAAY,OAAQC,MAAO,UAClE,4BAAQ1E,UAAU,iBAAiBT,GAAG,qBAAqB0E,SAhB1D,SAAAlD,GAAC,OAAIyD,EAAUzD,EAAE2C,OAAO7B,SAiBrB,4BAAQ8C,cAAY,GAApB,aACCnD,EAAWd,KAAI,SAACF,EAAIkB,GACjB,IAAIZ,EAAMa,OAAOC,KAAKpB,GACtB,OAAO,4BAAQqB,MAAOf,EAAKA,IAAKY,GAAQZ,QAKpD,yBAAKd,UAAU,gBACX,4BAAQ4D,KAAK,SAAS5D,UAAU,oBAAoB6D,eAAa,QAAQ5D,QAAS,kBAAMqC,EAAU,2BAC3FC,GAD0F,IAE7FE,YAAY,OAFhB,SAIA,4BAAQmB,KAAK,SAAS5D,UAAU,kBAChCC,QAAS,WACc,OAAXsE,IACAD,EAAgBhE,EAAgBc,OAAQmD,GACxCjC,EAAU,2BACPC,GADM,IAETE,YAAY,QANxB,eC8CLmC,G,MA7EO,SAAC,GAAgE,IAA/DrC,EAA8D,EAA9DA,OAAQD,EAAsD,EAAtDA,UAAWuC,EAA2C,EAA3CA,eAAgBvE,EAA2B,EAA3BA,gBACjDkB,EAD4E,EAAVpB,KAChDV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOe,EAAgBc,UAAQ,GAAGI,WADQ,EAEvDf,mBAASe,GAF8C,mBAE3EM,EAF2E,KAEnEyB,EAFmE,KAG5EC,EAAW,SAACC,EAAO1C,EAAGW,GACxB,IAAMZ,EAAgB,QAAV2C,EAAkB1C,EAAE2C,OAAO7B,MAAQF,OAAOC,KAAKE,EAAOJ,IAC5DoD,EAAgB,UAAVrB,EAAoB1C,EAAE2C,OAAO7B,MAAQF,OAAOG,OAAOA,EAAOJ,IACtE6B,EAAS,GAAD,mBACDzB,EAAOiD,MAAM,EAAGrD,IADf,gBAEFZ,EAAMgE,IAFJ,YAGDhD,EAAOiD,MAAMrD,EAAQ,OAGhC,OACI,yBAAK1B,UAAU,QAAQ2D,SAAS,MAC5B,yBAAK3D,UAAU,gBACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,mBACA,4BAAQ4D,KAAK,SAAS5D,UAAU,QAAQ6D,eAAa,QAAQC,aAAW,QAAQ7D,QAAS,kBAAMqC,EAAU,2BAClGC,GADiG,IAEpGG,UAAU,OAEd,0BAAMqB,cAAY,QAAlB,UAGJ,yBAAK/D,UAAU,eACVwB,EAAWd,KAAI,SAACF,EAAIkB,GACLC,OAAOC,KAAKpB,GACVmB,OAAOG,OAAOtB,GAC5B,OACI,yBAAKR,UAAY,iBAAiBc,IAAKY,GACnC,yBAAK1B,UAAU,2BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBT,GAAG,kBAAtC,QAEJ,2BAAOqE,KAAK,OAAO5D,UAAU,eAAgB6B,MAAOF,OAAOC,KAAKE,EAAOJ,IACvEsC,mBAAiB,iBAAiBC,SAAU,SAAClD,GAAD,OAAOyC,EAAS,MAAOzC,EAAGW,OAE1E,yBAAK1B,UAAU,2BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBT,GAAG,mBAAtC,UAEJ,2BAAOqE,KAAK,OAAO5D,UAAU,eAAgB6B,MAAOF,OAAOG,OAAOA,EAAOJ,IACzEsC,mBAAiB,iBAAiBC,SAAU,SAAClD,GAAD,OAAOyC,EAAS,QAASzC,EAAGW,YAM5F,yBAAK1B,UAAU,gBACX,4BAAQ4D,KAAK,SAAS5D,UAAU,oBAAoB6D,eAAa,QAAQ5D,QAAS,kBAAMqC,EAAU,2BAC3FC,GAD0F,IAE7FG,UAAU,OAFd,SAIA,4BAAQkB,KAAK,SAAS5D,UAAU,kBAChCC,QAAS,WACL6B,EAAOkD,SAAQ,SAAAxE,GACX,IAAMM,EAAMa,OAAOC,KAAKpB,GAAI,GACtBqB,EAAQF,OAAOG,OAAOtB,GAAI,GAE5BM,GAAOe,IACPgD,EAAevE,EAAgBc,OAAQU,GACvCQ,EAAU,2BACHC,GADE,IAELG,UAAU,WAV1B,cC4BLuC,EA5EO,SAACrC,GACnB,IAD6B,EAEiBnC,mBAAS,CACnDlB,GAAI,KACJ0B,EAAG,KACHE,EAAG,KACHC,OAAQ,KACRC,UAAU,EACVC,cAAc,EACdC,gBAAgB,IATS,mBAEtBjB,EAFsB,KAELD,EAFK,OAWDI,mBAAS,CACjC+B,YAAY,EACZ0C,aAAa,EACbzC,YAAY,EACZC,UAAU,IAfe,mBAWtBH,EAXsB,KAWdD,EAXc,KAiB7B,OACI,yBACItC,UAAU,iBACVC,QAAW,WACPI,EAAmB,2BACZC,GADW,IAEdf,GAAI,KACJ0B,EAAG,KACHE,EAAG,KACHE,UAAU,EACVC,cAAc,EACdC,gBAAgB,OAIpB,kBAAC,EAAD,CACInB,KAAMwC,EAAMxC,KACZD,OAjCD,KAkCCE,mBAAoBA,EACpBC,gBAAiBA,IAExBA,EAAgBe,UACjB,kBAAC,EAAD,eACIf,gBAAiBA,EACjBD,mBAAoBA,EACpBiC,UAAWA,EACXC,OAAQA,GACJK,IAEPL,EAAOC,YACR,kBAAC,EAAD,eACIF,UAAWA,EACXC,OAAQA,EACRjC,gBAAiBA,GACbsC,IAEe,IAAtBA,EAAMxC,KAAK8C,QAAe,kBAAC,EAAD,eACvBZ,UAAWA,EACXC,OAAQA,GACJK,IAEPL,EAAOE,YACR,kBAAC,EAAD,eACIH,UAAWA,EACXC,OAAQA,EACRjC,gBAAiBA,GACbsC,IAEPL,EAAOG,UACR,kBAAC,EAAD,eACIJ,UAAWA,EACXC,OAAQA,EACRjC,gBAAiBA,GACbsC,MCtDLuC,G,YAtBI,SAAC,GAAc,IAAbrD,EAAY,EAAZA,OAGjB,OACI,oCACI,8CACKA,EAAOpB,KAAI,SAACF,EAAIkB,GACb,IAAMZ,EAAMa,OAAOC,KAAKpB,GAClBqB,EAAQF,OAAOG,OAAOtB,GAC5B,OACI,yBAAKR,UAAU,aAAac,IAAKY,GAC7B,yBAAK1B,UAAU,qBAVrB,KAWM,yBAAKA,UAAU,sBAAf,UAAwCc,EAAxC,cAAiDe,EAAjD,OACA,yBAAK7B,UAAU,yBAXpB,SAeX,qCC2BGoF,EA3CO,SAAC,GAAuB,IAAtBhF,EAAqB,EAArBA,KAAM6B,EAAe,EAAfA,IAAKE,EAAU,EAAVA,KAG/B,OAAO,yBAAKnC,UAAU,kBAClB,6BAHc,KAId,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,uBAAf,SACA,yBAAKA,UAAU,yBAAf,WAA4CiC,KAEhD,yBAAKjC,UAAU,wBACX,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,yBAAf,WAA4CmC,KAEhD,yBAAKnC,UAAU,wBACX,yBAAKA,UAAU,uBAAf,WACA,yBAAKA,UAAU,yBACVI,EAAKM,KAAK,SAACe,EAAM4D,GAClB,IAAMzD,EAAOD,OAAOC,KAAKH,GACnBK,EAASH,OAAOG,OAAOL,GAC7B,OACI,yBACIzB,UAAU,uBACVc,IAAKuE,GACD,6BAtBN,KAuBU,yBAAKrF,UAAU,0BACV4B,EAAKlB,KAAI,SAACF,EAAIkB,GACX,OAAO,yBAAKZ,IAAKY,GACY,eAAhBE,EAAKF,GAAL,UAAkClB,EAAlC,aAAyCsB,EAAOJ,GAAhD,KAA4D,KAC5C,eAAhBE,EAAKF,GAA0B,kBAAC,EAAD,CAAYI,OAAQA,EAAOJ,KAAY,UAI/F,6BA9BL,IA8BK,WAMpB,yBAAK1B,UAAU,wBAAf,KACA,6BArCe,O,OCYvB,IAGMsF,EAAqB,CACzBzC,QCtBc,SAACtD,EAAIgG,GACjB,MAAO,CACH3B,KAAM,WACN4B,QAAS,CACLjG,KACAgG,cDkBVzC,WCdiB,SAACvD,GAChB,MAAO,CACHqE,KAAM,cACN4B,QAASjG,IDYfyC,QCTc,SAAAzC,GACZ,MAAO,CACHqE,KAAM,WACN4B,QAASjG,IDOf2C,UCJgB,SAAA3C,GACd,MAAO,CACHqE,KAAM,aACN4B,QAASjG,IDEf6C,SCCe,SAAA7C,GACb,MAAO,CACHqE,KAAM,YACN4B,QAASjG,IDHf8D,gBCMsB,SAACC,EAAMzB,EAAOtC,GAClC,MAAO,CACHqE,KAAM,mBACN4B,QAAS,CACLlC,OACAzB,QACAtC,QDXV4E,eCiCqB,WACnB,MAAO,CACHP,KAAM,gBDlCZU,gBCcsB,SAAC/E,EAAIuB,GACzB,MAAO,CACH8C,KAAM,mBACN4B,QAAS,CACLjG,KACAuB,SDlBV+D,eCsBqB,SAACtF,EAAIiC,GACxB,MAAO,CACHoC,KAAM,kBACN4B,QAAS,CACLjG,KACAiC,iBDxBGiE,eAfS,SAAC,GACvB,MAAO,CAAErF,KADsC,EAAtBA,KACV6B,IADgC,EAAhBA,IACXE,KAD2B,EAAXA,QAeEmD,EAAzBG,EAzBf,SAAa7C,GAEX,OACE,yBAAK5C,UAAU,OACd,kBAAC,EAAkB4C,GACnB,kBAAC,EAAkBA,O,OEblB8C,EAAe,CACjBzD,IAAK,KACLE,KAAM,KACN/B,KAAM,CACN,CACEb,GAAI,EACJY,OAAQ,KACRqB,WAAY,CAAC,CACX8B,KAAM,0EAIV,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACX8B,KAAM,8BAGV,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACX8B,KAAM,0CAGV,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACX8B,KAAM,0CAGV,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,gDAGR,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,sDAGR,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,gDAGR,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,wBAGR,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,4DAGR,CACE/D,GAAI,EACJY,OAAQ,EACRqB,WAAY,CAAC,CACb8B,KAAM,0CAGR,CACE/D,GAAI,GACJY,OAAQ,EACRqB,WAAY,CACV,CACE8B,KAAM,sCAOVqC,EAAQ,SAARA,EAASpG,EAAIa,GACjB,IAAIwF,EACAC,EAASzF,EAAKV,QAAO,SAAAc,GAAE,OAAIA,EAAGL,SAAWZ,KAK7C,OAJAqG,EAAUxF,EAAKV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOA,KACtCsG,EAAOb,SAAQ,SAAAxE,GACboF,EAAUD,EAAMnF,EAAGjB,GAAIqG,MAElBA,GA6IME,EA1IC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC9C,OAAQA,EAAOpC,MACX,IAAK,WACL,IAAMqC,EAAO,CACT1G,GAAIyG,EAAOR,QAAQjG,GACnBY,OAAQ6F,EAAOR,QAAQD,SACvB/D,WAAY,CACV,CACE8B,KAAM,eAKRsC,EAAO,sBACNG,EAAM3F,MADA,CAET6F,IAEJ,OAAO,2BACCF,GADR,IAEK3F,KAAMwF,IAEX,IAAK,cACL,OAAO,2BACFG,GADL,IAEE3F,KAAMuF,EAAMK,EAAOR,QAAR,YAAqBO,EAAM3F,SAExC,IAAK,WACL,OAAO,2BACF2F,GADL,IAEE9D,IAAK+D,EAAOR,UAEd,IAAK,YACL,OAAO,2BACFO,GADL,IAEE5D,KAAM6D,EAAOR,UAEf,IAAK,aACH,IAEItD,EAFAF,EAAU,YAAI+D,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOwG,EAAM9D,OAAK,GAC5DG,EAAW,YAAI2D,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOwG,EAAM5D,QAAM,GAGhED,EADE6D,EAAM9D,IACC,2BACJD,GADI,IAEP7B,OAAQ6F,EAAOR,UAGR,2BACJpD,GADI,IAEPjC,OAAQ6F,EAAOR,UAGnB,IAAIU,EAAgB,YAAIH,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOwG,EAAM9D,OAWnE,OATEiE,EADIH,EAAM9D,IACG,sBACRiE,GADQ,CAEXhE,IAEa,sBACR6D,EAAM3F,MADE,CAEX8B,IAGC,2BACA6D,GADP,IAEI3F,KAAM8F,IAEV,IAAK,mBACH,IAAIzE,EAAO,YAAIsE,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOyG,EAAOR,QAAQjG,MAAI,GACjE4G,EAAQ,YAAIJ,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOyG,EAAOR,QAAQjG,MAUlE,OATAkC,EAAI,2BACGA,GADH,IAEAD,WAAW,GAAD,mBACLC,EAAKD,YADA,gBAGLwE,EAAOR,QAAQlC,KAAO0C,EAAOR,QAAQ3D,WAIvC,2BACFkE,GADL,IAEE3F,KAAK,GAAD,mBACC+F,GADD,CAEF1E,MAGJ,IAAK,cACL,OAAO,2BACFsE,GADL,IAEE3F,KAAM,CACF,CACEb,GAAI,EACJY,OAAQ,KACRqB,WAAY,CACV,CACE8B,KAAM,qBAMlB,IAAK,mBACH,IAAI9C,EAAK,YAAIuF,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOyG,EAAOR,QAAQjG,MAAI,GAC/D6G,EAAO5F,EAAGgB,WAAW9B,QAAO,SAAAC,GAAO,OAAIgC,OAAOC,KAAKjC,GAAS,KAAOqG,EAAOR,QAAQ1E,OACtFN,EAAE,2BACGA,GADH,IAEAgB,WAAY4E,IAEd,IAAIC,EAAW,YAAIN,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOyG,EAAOR,QAAQjG,MACvE,OAAO,2BACAwG,GADP,IAEI3F,KAAK,GAAD,mBACCiG,GADD,CAEF7F,MAGN,IAAK,kBACH,IAAI8F,EAAS,YAAIP,EAAM3F,MAAMV,QAAO,SAAAc,GAAE,OAAIA,EAAGjB,KAAOyG,EAAOR,QAAQjG,MAAI,GACnEgH,EAAMR,EAAM3F,KAAKoG,WAAU,SAAAhG,GAAE,OAAIA,IAAO8F,KAM9C,OALEA,EAAM,2BACDA,GADC,IAEJ9E,WAAYwE,EAAOR,QAAQhE,aAGxB,2BACAuE,EAAMhB,OADb,IAEI3E,KAAK,GAAD,mBACC2F,EAAM3F,KAAK2E,MAAM,EAAGwB,IADrB,CAEFD,GAFE,YAGCP,EAAM3F,KAAK2E,MAAMwB,EAAM,OAIlC,QACI,OAAOR,IChOJU,EAFDC,YAAYZ,GCG1Ba,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OAENI,SAASC,eAAe,W","file":"static/js/main.b01336ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Folder = ({setClosedFolder, id, folders}) => {\r\n    \r\n    let folder = folders.filter(element => element.id === id)[0];\r\n    \r\n    const newFolders = folders.filter(element => element.id !== id);\r\n   return (\r\n        <img \r\n            src={folder && folder.open ? \"images/opened.png\" : \"images/closed.png\"}\r\n            alt=\"folder\"\r\n            className=\"node__folder\"\r\n            onClick={() => {\r\n                setClosedFolder([\r\n                ...newFolders,\r\n                {\r\n                    ...folder,\r\n                    open: !folder.open\r\n                }\r\n            ])}}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Folder;","import React, { useState, useEffect } from 'react';\r\nimport './node.css';\r\nimport Folder from '../folder/folder';\r\n\r\nconst Node = ({parent, data, setSelectedElement, selectedElement}) => {\r\n \r\n    const items = data.filter(el => el.parent === parent);\r\n    \r\n    const [folders, setClosedFolder] = useState(items.map(el => ({id: el.id, open: true})))\r\n\r\n    useEffect(() => {\r\n        setClosedFolder(items.map(el => ({id: el.id, open: true})))\r\n    }, [data])\r\n    \r\n    return (\r\n        <ul className=\"node\">\r\n            {items.map(el => {\r\n                let folder = folders.filter(element => element.id === el.id)[0];\r\n                console.log(\"folders\",folders) \r\n                console.log('folder', folder)\r\n                return (\r\n                    <li \r\n                        className=\"node__li\"\r\n                        key={el.id}>\r\n                            <div className=\"node__wrapper\">\r\n                                <Folder setClosedFolder={setClosedFolder} id={el.id} folders={folders}/>\r\n                                <div \r\n                                    className = { selectedElement.id === el.id ? \r\n                                        \"node__attributes node__atributes_selected\" : \"node__attributes\" }\r\n                                    onClick={(e)=> {\r\n                                        e.stopPropagation();\r\n                                        const x = e.nativeEvent.x - 10;\r\n                                        const y = e.nativeEvent.y - 10;\r\n                                        setSelectedElement({\r\n                                            ...selectedElement,\r\n                                            id: el.id,\r\n                                            x, \r\n                                            y,\r\n                                            tempId: el.id,\r\n                                            showMenu: true,\r\n                                            showEditMenu: false,\r\n                                            showAttributes: false\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    {el.attributes.map((elem, index) => {\r\n                                        let key = Object.keys(elem);\r\n                                        let value = Object.values(elem)\r\n                                        return (\r\n                                        <div key={index}>{`${key}: ${value}`}</div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            {folder && folder.open && <Node  \r\n                                parent={el.id} \r\n                                data={data}\r\n                                setSelectedElement={setSelectedElement}\r\n                                selectedElement={selectedElement}\r\n                            />}\r\n                    </li>\r\n                )\r\n        })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Node;","import React from 'react';\r\nimport './edit-menu.css';\r\n\r\nconst EditMenu = ({ selectedElement, cutNode, cut, pasteNode, copy, copyNode }) => {\r\n    return (\r\n        <ul className=\"editMenu__ul\">\r\n            <li \r\n                className=\"editMenu__li\"\r\n                onClick={() => {\r\n                    copyNode(null);\r\n                    cutNode(selectedElement.id);\r\n                }}\r\n            >\r\n                    Cut\r\n            </li>\r\n            <li \r\n                className=\"editMenu__li\"\r\n                onClick={() => {\r\n                    cutNode(null);\r\n                    copyNode(selectedElement.id);\r\n                }}\r\n            >\r\n                Copy\r\n            </li>\r\n            {cut || copy ? \r\n            <li \r\n                className=\"editMenu__li\"\r\n                onClick={() => {\r\n                    pasteNode(selectedElement.id);\r\n                    cutNode(null);\r\n                }}\r\n            >\r\n                Paste\r\n            </li>  : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default EditMenu;","import React from 'react';\r\nimport './attributes-menu.css';\r\n\r\nconst AttributesMenu = ({setModals, modals}) => {\r\n    return (\r\n        <ul className=\"attributesMenu__ul\">\r\n            <li \r\n                className=\"attributesMenu__li\"\r\n                onClick={() => setModals({\r\n                    ...modals,\r\n                    createAttr: true\r\n                })}\r\n            >\r\n                Create\r\n            </li>\r\n            <li\r\n                 className=\"attributesMenu__li\"\r\n                 onClick={() => setModals({\r\n                    ...modals,\r\n                    deleteAttr: true\r\n                })}\r\n            >\r\n                Delete\r\n            </li>\r\n            <li \r\n                className=\"attributesMenu__li\"\r\n                onClick={() => setModals({\r\n                    ...modals,\r\n                    editAttr: true\r\n                })}\r\n            >\r\n                Edit\r\n            </li> \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AttributesMenu;","import React from 'react';\r\nimport './menu.css';\r\nimport EditMenu from '../edit-menu/edit-menu';\r\nimport AttributesMenu from '../attributes-menu/attributes-menu';\r\n\r\nconst Menu = (props) => {\r\n    const { selectedElement, addNode, data, deleteNode,  setSelectedElement } = props;\r\n    const style = {\r\n        top: selectedElement.y + \"px\",\r\n        left: selectedElement.x + \"px\"\r\n    }\r\n    return (\r\n        <div className=\"menu\" style={style}>\r\n            <ul \r\n                className='menu__ul'\r\n            >\r\n                    <li \r\n                        className=\"menu__li\"\r\n                        onClick={() => addNode(data.length, selectedElement.id)}\r\n                        onMouseEnter={() => setSelectedElement({\r\n                            ...selectedElement,\r\n                            showEditMenu: false,\r\n                            showAttributes: false\r\n                        })}\r\n                    >\r\n                            Create\r\n                    </li>\r\n                    <li \r\n                        className=\"menu__li\"\r\n                        onMouseEnter={() => setSelectedElement({\r\n                            ...selectedElement,\r\n                            showEditMenu: false,\r\n                            showAttributes: true\r\n                        })}\r\n                    >\r\n                        Attributes\r\n                    </li>\r\n                    <li \r\n                        className=\"menu__li\"\r\n                        onClick={() => deleteNode(selectedElement.id)}\r\n                        onMouseEnter={() => setSelectedElement({\r\n                            ...selectedElement,\r\n                            showEditMenu: false,\r\n                            showAttributes: false\r\n                        })}\r\n                    >\r\n                        Delete\r\n                    </li>\r\n                    <li \r\n                        className=\"menu__li\"\r\n                        onMouseEnter={() => setSelectedElement({\r\n                            ...selectedElement,\r\n                            showAttributes: false,\r\n                            showEditMenu: true,\r\n                        })}\r\n                    >\r\n                        Edit\r\n                    </li>\r\n            </ul>\r\n            {selectedElement.showEditMenu && <EditMenu {...props} />}\r\n            {selectedElement.showAttributes && <AttributesMenu {...props}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, { useState } from 'react';\r\nimport './create-attribute.css';\r\n\r\nconst CreateAttribute = ({modals, setModals, createAttribute, selectedElement}) => {\r\n    const [values, setValue] = useState({\r\n        name: null,\r\n        value: null\r\n    })\r\n    const setParam = (field, e) => {\r\n        setValue({\r\n        ...values,\r\n        [field]: e.target.value\r\n    })}\r\n    \r\n    return (\r\n        <div className=\"modal\" tabIndex=\"-1\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Create attribute</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setModals({\r\n                        ...modals,\r\n                        createAttr: false\r\n                    })}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"input-group flex-nowrap\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"addon-wrapping\">name</span>\r\n                        </div>\r\n                    <input type=\"text\" className=\"form-control\"  aria-label=\"Username\" \r\n                    aria-describedby=\"addon-wrapping\" onChange={(e) => setParam(\"name\", e)}/>\r\n                    </div>\r\n                    <div className=\"input-group flex-nowrap\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"addon-wrappings\">value</span>\r\n                        </div>\r\n                    <input type=\"text\" className=\"form-control\"  aria-label=\"Username\" \r\n                    aria-describedby=\"addon-wrapping\" onChange={(e) => setParam(\"value\", e)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => setModals({\r\n                        ...modals,\r\n                        createAttr: false\r\n                    })}>Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        const {value, name} = values;\r\n                        if (value && name ) {\r\n                            createAttribute(name, value, selectedElement.tempId);\r\n                            setModals({\r\n                                ...modals,\r\n                                createAttr: false\r\n                            })\r\n                        }\r\n                    }}\r\n                    >Create</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAttribute;","import React from 'react';\r\n\r\nconst RootElement = ({setModals, modals, createRootElem}) => {\r\n    return (\r\n        <div className=\"modal\" tabIndex=\"-1\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Create root element</h5>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-primary\"\r\n                    onClick = {() => {\r\n                        createRootElem();\r\n                        setModals({\r\n                            ...modals,\r\n                            rooElement: false\r\n                        })\r\n                    }}\r\n                    >Create</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RootElement;","import React, { useState } from 'react';\r\n\r\nconst DeleteAttribute = ({modals, setModals, deleteAttribute, selectedElement, data}) => {\r\n    const [select, setSelect] = useState(null)\r\n    const setParam = e => setSelect(e.target.value)\r\n    let attributes = data.filter(el => el.id === selectedElement.tempId)[0].attributes;\r\n    return (\r\n        <div className=\"modal\" tabIndex=\"-1\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Delete attribute</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setModals({\r\n                        ...modals,\r\n                        deleteAttr: false\r\n                    })}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"input-group mb-3 \" style={{marginLeft: '20px', width: \"460px\"}}>\r\n                    <select className=\"custom-select \" id=\"inputGroupSelect02\" onChange={setParam}>\r\n                        <option defaultValue>Choose...</option>\r\n                        {attributes.map((el, index) => {\r\n                            let key = Object.keys(el);\r\n                            return <option value={key} key={index}>{key}</option>\r\n                        })}\r\n                    \r\n                </select>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => setModals({\r\n                        ...modals,\r\n                        deleteAttr: false\r\n                    })}>Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                            if (select !== null) {\r\n                                deleteAttribute(selectedElement.tempId, select);\r\n                                setModals({\r\n                                ...modals,\r\n                                deleteAttr: false\r\n                            })\r\n                            }     \r\n                    }}\r\n                    >Delete</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteAttribute;","import React, { useState } from 'react';\r\nimport './edit-attribute.css';\r\n\r\nconst EditAttribute = ({modals, setModals, editAttributes, selectedElement, data}) => {\r\n    const attributes = data.filter(el => el.id === selectedElement.tempId)[0].attributes;\r\n    const [values, setValue] = useState(attributes);\r\n    const setParam = (field, e, index) => {\r\n        const key = field === \"key\" ? e.target.value : Object.keys(values[index]);\r\n        const val = field === \"value\" ? e.target.value : Object.values(values[index]);\r\n        setValue([\r\n            ...values.slice(0, index),\r\n            {[key]: val},\r\n            ...values.slice(index + 1)\r\n        ])\r\n    }\r\n    return (\r\n        <div className=\"modal\" tabIndex=\"-1\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Edit attributes</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setModals({\r\n                        ...modals,\r\n                        editAttr: false\r\n                    })}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-bodys\">\r\n                    {attributes.map((el, index) => {\r\n                        const key = Object.keys(el);\r\n                        const value = Object.values(el);\r\n                        return (\r\n                            <div className = \"wrapper__input\" key={index}>\r\n                                <div className=\"input-group flex-nowrap\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"addon-wrapping\">key</span>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"form-control\"  value={Object.keys(values[index])}\r\n                                    aria-describedby=\"addon-wrapping\" onChange={(e) => setParam(\"key\", e, index)}/>\r\n                                </div>\r\n                                <div className=\"input-group flex-nowrap\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"addon-wrappings\">value</span>\r\n                                    </div>\r\n                                    <input type=\"text\" className=\"form-control\"  value={Object.values(values[index])}\r\n                                    aria-describedby=\"addon-wrapping\" onChange={(e) => setParam(\"value\", e, index)}/>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => setModals({\r\n                        ...modals,\r\n                        editAttr: false\r\n                    })}>Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        values.forEach(el => {\r\n                            const key = Object.keys(el)[0];\r\n                            const value = Object.values(el)[0]; \r\n                         \r\n                            if (key && value) {\r\n                                editAttributes(selectedElement.tempId, values);\r\n                                setModals({\r\n                                    ...modals,\r\n                                    editAttr: false\r\n                                })\r\n                            }\r\n                        })\r\n                    }}\r\n                    >Edit</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAttribute;","import React, { useState }  from 'react';\r\nimport './interface-tree.css';\r\nimport Node from '../node/node';\r\nimport Menu from '../menu/menu';\r\nimport CreateAttribute from '../modal/create-attribute/create-attribute';\r\nimport RootElement from '../modal/root-element/root-element';\r\nimport DeleteAttribute from '../modal/delete-attribute/delete-attribute';\r\nimport EditAttribute from '../modal/edit-attribute/edit-attribute';\r\n\r\nconst InterfaceTree = (props) => {\r\n    const parent = null;\r\n    const [selectedElement, setSelectedElement] = useState({\r\n        id: null,\r\n        x: null,\r\n        y: null,\r\n        tempId: null,\r\n        showMenu: false,\r\n        showEditMenu: false, \r\n        showAttributes: false,\r\n    });\r\n    const [modals, setModals] = useState({\r\n        createAttr: false,\r\n        rootElement: false,\r\n        deleteAttr: false,\r\n        editAttr: false,\r\n    })\r\n    return (\r\n        <div \r\n            className=\"interface-tree\"\r\n            onClick = {() => {\r\n                setSelectedElement({\r\n                    ...selectedElement,\r\n                    id: null,\r\n                    x: null,\r\n                    y: null,\r\n                    showMenu: false,\r\n                    showEditMenu: false,\r\n                    showAttributes: false\r\n                })  \r\n            }} \r\n        >\r\n                <Node \r\n                    data={props.data} \r\n                    parent={parent}\r\n                    setSelectedElement={setSelectedElement}\r\n                    selectedElement={selectedElement}\r\n            />\r\n            {selectedElement.showMenu && \r\n            <Menu \r\n                selectedElement={selectedElement}\r\n                setSelectedElement={setSelectedElement}\r\n                setModals={setModals}\r\n                modals={modals}\r\n                {...props}\r\n            />}\r\n            {modals.createAttr && \r\n            <CreateAttribute \r\n                setModals={setModals}\r\n                modals={modals}\r\n                selectedElement={selectedElement}\r\n                {...props}\r\n            />}\r\n            {props.data.length === 0 &&<RootElement \r\n                setModals={setModals}\r\n                modals={modals}\r\n                {...props}\r\n            />}\r\n            {modals.deleteAttr && \r\n            <DeleteAttribute \r\n                setModals={setModals}\r\n                modals={modals}\r\n                selectedElement={selectedElement}\r\n                {...props}\r\n            />}\r\n            {modals.editAttr &&\r\n            <EditAttribute \r\n                setModals={setModals}\r\n                modals={modals}\r\n                selectedElement={selectedElement}\r\n                {...props}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterfaceTree;","import React from 'react';\r\nimport './attributes.css';\r\n\r\nconst Attributes = ({values}) => {\r\n    const scopeLeft = '{';\r\n    const scopeRight = '}';\r\n    return (\r\n        <>\r\n            <div>attributes: [</div>\r\n                {values.map((el, index) => {\r\n                    const key = Object.keys(el);\r\n                    const value = Object.values(el);\r\n                    return (\r\n                        <div className=\"attributes\" key={index}>\r\n                            <div className=\"attributes__scope\">{scopeLeft}</div>\r\n                            <div className=\"attributes__values\">{`${key}: \"${value}\",`}</div>\r\n                            <div className=\"interface-json__scope\">{scopeRight}</div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            <div>]</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Attributes;","import React from 'react';\r\nimport './interface-json.css';\r\nimport Attributes from '../attributes/attributes';\r\n\r\nconst InterfaceJson = ({data, cut, copy}) => {\r\n    const scopeLeft = '{';\r\n    const scopeRight = '}';\r\n    return <div className=\"interface-json\">\r\n        <div>{scopeLeft}</div>\r\n        <div className=\"interface-json__data\">\r\n            <div className=\"interface-json__key\">cut: </div>\r\n            <div className=\"interface-json__value\">{` ${cut}`}</div>\r\n        </div>\r\n        <div className=\"interface-json__data\">\r\n            <div className=\"interface-json__key\">copy: </div>\r\n            <div className=\"interface-json__value\">{` ${copy}`}</div>\r\n        </div>\r\n        <div className=\"interface-json__json\">\r\n            <div className=\"interface-json__key\">data: [</div>\r\n            <div className=\"interface-json__value\">\r\n                {data.map(((elem, i) => {\r\n                const keys = Object.keys(elem);\r\n                const values = Object.values(elem);\r\n                return (\r\n                    <div \r\n                        className=\"interface-json__node\" \r\n                        key={i}>\r\n                            <div>{scopeLeft}</div>\r\n                                <div className=\"interface-json__params\">\r\n                                    {keys.map((el, index) => {\r\n                                        return <div key={index}>\r\n                                                    {keys[index] !== 'attributes' ? `${el}: ${values[index]},` : null}\r\n                                                    {keys[index] === 'attributes' ? <Attributes values={values[index]}/> : null}\r\n                                                </div>\r\n                                    })}\r\n                                </div>\r\n                            <div>{scopeRight},</div>\r\n                    </div>\r\n                )\r\n            }))}\r\n                </div>\r\n            </div>\r\n        <div className=\"interface-json__data\">]</div>\r\n        <div>{scopeRight}</div>\r\n    </div>\r\n}\r\n\r\nexport default InterfaceJson;","import React from 'react';\nimport './app.css';\nimport InterfaceTree from './components/interface-tree/interface-tree';\nimport InterfaceJson from './components/interface-json/interface-json';\nimport { connect } from 'react-redux';\nimport { addNode, deleteNode, cutNode, pasteNode, editAttributes,\n  copyNode, createAttribute, createRootElem, deleteAttribute } from './redux/actions';\n\nfunction App(props) {\n  \n  return (\n    <div className=\"app\">\n     <InterfaceTree {...props}/>\n     <InterfaceJson {...props}/>\n    </div>\n    )\n}\n\nconst mapStateToProps = ({ data, cut, copy }) => {\n  return { data, cut, copy }\n}\nconst mapDispatchToProps = {\n  addNode,\n  deleteNode,\n  cutNode,\n  pasteNode,\n  copyNode,\n  createAttribute,\n  createRootElem,\n  deleteAttribute,\n  editAttributes \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const addNode = (id, parentId) => {\r\n    return {\r\n        type: \"ADD_NODE\",\r\n        payload: {\r\n            id,\r\n            parentId\r\n        }\r\n    }\r\n}\r\nconst deleteNode = (id) => {\r\n    return {\r\n        type: \"DELETE_NODE\",\r\n        payload: id\r\n    }\r\n}\r\nconst cutNode = id => {\r\n    return {\r\n        type: \"CUT_NODE\",\r\n        payload: id\r\n    }\r\n}\r\nconst pasteNode = id => {\r\n    return {\r\n        type: \"PASTE_NODE\",\r\n        payload: id\r\n    }\r\n}\r\nconst copyNode = id => {\r\n    return {\r\n        type: \"COPY_NODE\",\r\n        payload: id\r\n    }\r\n}\r\nconst createAttribute = (name, value, id) => {\r\n    return {\r\n        type: \"CREATE_ATTRIBUTE\",\r\n        payload: {\r\n            name,\r\n            value,\r\n            id\r\n        }\r\n    }\r\n}\r\nconst deleteAttribute = (id, key) => {\r\n    return {\r\n        type: \"DELETE_ATTRIBUTE\",\r\n        payload: {\r\n            id,\r\n            key\r\n        }\r\n    }\r\n}\r\nconst editAttributes = (id, attributes) => {\r\n    return {\r\n        type: \"EDIT_ATTRIBUTES\",\r\n        payload: {\r\n            id,\r\n            attributes\r\n        }\r\n    }\r\n}\r\nconst createRootElem = () => {\r\n    return {\r\n        type: \"CREATE_ROOT\"\r\n    }\r\n}\r\n\r\nexport { addNode, deleteNode, cutNode, pasteNode, editAttributes,\r\n    copyNode, createAttribute, createRootElem, deleteAttribute };","const initialState = {\r\n    cut: null,\r\n    copy: null,\r\n    data: [\r\n    {\r\n      id: 0,\r\n      parent: null,\r\n      attributes: [{\r\n        name: \"Флора и фауна\"\r\n      }]\r\n    },\r\n  \r\n    {\r\n      id: 1,\r\n      parent: 0,\r\n      attributes: [{\r\n        name: \"Рыбы\"\r\n      }]\r\n    },\r\n    {\r\n      id: 2,\r\n      parent: 1,\r\n      attributes: [{\r\n        name: \"форель\"\r\n      }]\r\n    },\r\n    { \r\n      id: 3,\r\n      parent: 1,\r\n      attributes: [{\r\n        name: \"лосось\"\r\n      }]\r\n    },\r\n    {\r\n      id: 4,\r\n      parent: 0,\r\n      attributes: [{\r\n      name: \"Деревья\"\r\n      }]\r\n    },\r\n    {\r\n      id: 5,\r\n      parent: 4,\r\n      attributes: [{\r\n      name: \"Огромные\"\r\n      }]\r\n    },\r\n    {\r\n      id: 6,\r\n      parent: 5,\r\n      attributes: [{\r\n      name: \"секвойя\"\r\n      }]\r\n    }, \r\n    {\r\n      id: 7,\r\n      parent: 5,\r\n      attributes: [{\r\n      name: \"дуб\"\r\n      }]\r\n    }, \r\n    {\r\n      id: 8,\r\n      parent: 4,\r\n      attributes: [{\r\n      name: \"Цветковые\"\r\n      }]\r\n    },  \r\n    {\r\n      id: 9,\r\n      parent: 8,\r\n      attributes: [{\r\n      name: \"яблоня\"\r\n      }]\r\n    }, \r\n    {\r\n      id: 10,\r\n      parent: 8,\r\n      attributes: [ \r\n        {\r\n          name: \"груша\"\r\n        }\r\n    ]\r\n    },\r\n    ]   \r\n  }\r\n\r\nconst delEl = (id, data) => {\r\n  let newData;\r\n  let childs = data.filter(el => el.parent === id);\r\n  newData = data.filter(el => el.id !== id);\r\n  childs.forEach(el => {\r\n    newData = delEl(el.id, newData)\r\n  })\r\n  return newData\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_NODE\": \r\n        const node = {\r\n            id: action.payload.id,\r\n            parent: action.payload.parentId,\r\n            attributes: [\r\n              {\r\n                name: 'New node ',\r\n              }   \r\n            ],\r\n        }\r\n        \r\n        const newData = [\r\n            ...state.data,\r\n            node\r\n        ]\r\n        return {\r\n             ...state,\r\n             data: newData\r\n        }\r\n        case \"DELETE_NODE\": \r\n        return {\r\n          ...state,\r\n          data: delEl(action.payload, [...state.data])\r\n        }\r\n        case \"CUT_NODE\": \r\n        return {\r\n          ...state,\r\n          cut: action.payload\r\n        }\r\n        case \"COPY_NODE\": \r\n        return {\r\n          ...state,\r\n          copy: action.payload\r\n        }\r\n        case \"PASTE_NODE\":\r\n          let cutNode = [...state.data].filter(el => el.id === state.cut)[0];\r\n          let copyNode = [...state.data].filter(el => el.id === state.copy)[0];\r\n          let pasteNode;\r\n          if (state.cut) {\r\n            pasteNode = {\r\n              ...cutNode,\r\n              parent: action.payload\r\n            }\r\n          } else {\r\n            pasteNode = {\r\n              ...copyNode,\r\n              parent: action.payload\r\n            }\r\n          }\r\n          let transformData = [...state.data].filter(el => el.id !== state.cut);\r\n          if (state.cut) {\r\n          transformData = [\r\n            ...transformData,\r\n            pasteNode\r\n          ]} else {\r\n            transformData = [\r\n              ...state.data,\r\n              pasteNode\r\n            ]\r\n          }\r\n        return {\r\n            ...state,\r\n            data: transformData\r\n        }\r\n        case \"CREATE_ATTRIBUTE\": \r\n          let elem = [...state.data].filter(el => el.id === action.payload.id)[0];\r\n          let datas = [...state.data].filter(el => el.id !== action.payload.id);\r\n          elem = {\r\n              ...elem, \r\n              attributes: [\r\n                ...elem.attributes,\r\n                {\r\n                  [action.payload.name]: action.payload.value\r\n                }  \r\n              ],\r\n          }\r\n          return {\r\n            ...state,\r\n            data: [\r\n              ...datas,\r\n              elem\r\n            ]\r\n          }\r\n          case \"CREATE_ROOT\":\r\n          return {\r\n            ...state,\r\n            data: [\r\n                {\r\n                  id: 0,\r\n                  parent: null,\r\n                  attributes: [\r\n                    {\r\n                      name: \"Root element\"\r\n                    }\r\n                  ]\r\n                }\r\n            ]\r\n          }\r\n          case \"DELETE_ATTRIBUTE\":\r\n            let el = [...state.data].filter(el => el.id === action.payload.id)[0];\r\n            let attr = el.attributes.filter(element => Object.keys(element)[0] !== action.payload.key);\r\n            el = {\r\n              ...el,\r\n              attributes: attr\r\n            }\r\n            let dataElem = [...state.data].filter(el => el.id !== action.payload.id);\r\n          return {\r\n              ...state,\r\n              data: [\r\n                ...dataElem,\r\n                el\r\n              ]\r\n          }\r\n          case \"EDIT_ATTRIBUTES\": \r\n            let editEl = [...state.data].filter(el => el.id === action.payload.id)[0];\r\n            let idx = state.data.findIndex(el => el === editEl);\r\n            editEl = {\r\n              ...editEl,\r\n              attributes: action.payload.attributes\r\n            }\r\n           \r\n          return {\r\n              ...state.slice,\r\n              data: [\r\n                ...state.data.slice(0, idx),\r\n                editEl,\r\n                ...state.data.slice(idx + 1)\r\n              ]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\n\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n\n"],"sourceRoot":""}